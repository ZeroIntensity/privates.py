[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "privates.py"
dynamic = ["version"]
description = 'Stop others from touching your privates.'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "ZeroIntensity", email = "zintensitydev@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://privates.zintensity.dev"
Issues = "https://github.com/ZeroIntensity/privates.py/issues"
Source = "https://github.com/ZeroIntensity/privates.py"

[tool.black]
target-version = ["py38"]
line-length = 79

[tool.ruff]
target-version = "py38"
line-length = 79
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",

    # Allow wildcard imports
    "F403",
    # Allow relative imports
    "TID252",

    # Literals in exceptions
    "EM101", "EM102",

]
unfixable = [
  # Don't touch unused imports
  "F401",
]
exclude = ["tests"]

[tool.ruff.isort]
known-first-party = ["src/privates"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["privates", "tests"]
branch = true
parallel = true
omit = [
  "src/privates/__about__.py",
]

[tool.coverage.paths]
privates = ["src/privates"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
